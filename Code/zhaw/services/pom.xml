<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0         http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ch.zhaw.ficore.p2abc</groupId>
	<name>zhaw-webservices</name>
	<description>zhaw-webservices</description>
	<artifactId>zhaw-webservices</artifactId>
	<!-- Should be identical to the parent POM's version, but maven doesn't 
		let us do this via properties. So, unfortunately, you need to keep these 
		in sync manually. -->
	<version>4.1.3</version>
	<packaging>war</packaging>
	<parent>
		<groupId>ch.zhaw.ficore.p2abc</groupId>
		<artifactId>privacy-ge-zhaw</artifactId>
		<version>4.1.3</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<properties>
		<jersey.version>1.18</jersey.version>
	</properties>
	<pluginRepositories>
		<pluginRepository>
			<id>maven-repository.dev.java.net</id>
			<name>Java.net Maven 2 Repository</name>
			<url>http://download.java.net/maven/2</url>
		</pluginRepository>
	</pluginRepositories>
	<dependencies>
		<!-- HTML builder -->
		<dependency>
			<groupId>com.hp.gagawa</groupId>
			<artifactId>gagawa</artifactId>
			<version>1.0.1</version>
		</dependency>
		<!-- Servlets -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<!-- Database connection pooling -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>2.0</version>
		</dependency>
		<!-- Guice -->
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>3.0</version>
		</dependency>
		<!-- Jersey -->
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-servlet</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-grizzly2</artifactId>
			<version>1.10</version>
			<scope>test</scope>
		</dependency>
		<dependency>
    <groupId>org.glassfish.jersey.containers</groupId>
    <!-- if your container implements Servlet API older than 3.0, use "jersey-container-servlet-core"  -->
    <artifactId>jersey-container-servlet-core</artifactId>
    <version>2.17</version>
</dependency>
<dependency>
    <groupId>javax.ws.rs</groupId>
    <artifactId>javax.ws.rs-api</artifactId>
    <version>2.0.1</version>
    <scope>provided</scope>
</dependency>
		<!-- Unit test are using jersey server directly -->
		<dependency>
			<groupId>com.sun.jersey.test.framework</groupId>
			<artifactId>jersey-test-framework</artifactId>
			<version>1.0.3</version>
			<scope>test</scope>
		</dependency>
		<!-- ZHAW ABC components -->
		<dependency>
			<groupId>ch.zhaw.ficore.p2abc</groupId>
			<artifactId>zhaw-components</artifactId>
			<version>4.1.3</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>zhaw-p2abc-webservices</finalName>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxb2-maven-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<id>schemagen</id>
						<goals>
							<goal>schemagen</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<transformSchemas>
						<transformSchema>
							<uri>http://abc4trust.eu/wp2/abcschemav1.0</uri>
							<!-- <toPrefix>abc</toPrefix> -->
							<toFile>p2abc.xsd</toFile>
						</transformSchema>
					</transformSchemas>
					<includes>
						<include>ch/zhaw/ficore/p2abc/services/issuance/xml/*.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<url>http://srv-lab-t-425.zhaw.ch:8080/manager/text</url>
					<server>TomcatServer</server>
					<path>/zhaw-p2abc-webservices</path>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
      <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<excludeFilterFile>findbugs-exclude.xml</excludeFilterFile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<reportSets>
					<reportSet>
						<id>html</id>
						<configuration>
						  <tags>
						    <!-- The javadoc tool interprets tags of the form "@fiware-..."
						         as an "@fiware" tag with an argument that starts with a
						         dash.  So telling the javadoc plugin to ignore "fiware"
						         will ignore all tags "@fiware-...". -->
                <tag><name>fiware</name><placement>X</placement><head/></tag>
						  </tags>
						</configuration>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
          <reportSet>
            <id>markdown</id>
            <configuration>
              <doclet>ch.zhaw.ficore.p2abc.FicoreUnitTestDoclet</doclet>
              <docletPath>${project.parent.basedir}/documenter/target/documenter.jar</docletPath>
              <useStandardDocletOptions>false</useStandardDocletOptions>
              <destDir>rest-markdown</destDir>
              <name>REST API documentation</name>
              <description>REST API Documentation.</description>
            </configuration>
            <reports>
              <report>javadoc</report>
            </reports>
          </reportSet>
  			  <reportSet>
						<id>test-markdown</id>
						<configuration>
							<doclet>ch.zhaw.ficore.p2abc.FicoreUnitTestDoclet</doclet>
							<docletPath>${project.parent.basedir}/documenter/target/documenter.jar</docletPath>
							<useStandardDocletOptions>false</useStandardDocletOptions>
							<destDir>test-markdown</destDir>
							<name>Unit Test Plan</name>
							<description>Unit Test Plan.</description>
						</configuration>
						<reports>
              <report>test-javadoc</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
	<profiles>
		<profile>
			<id>issuance</id>
			<properties>
				<packaging.type>war</packaging.type>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<finalName>${project.artifactId}-${project.version}-issuance</finalName>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<configuration>
							<webResources>
								<resource>
									<!-- this is relative to the pom.xml directory -->
									<directory>${project.basedir}/src/main/resources</directory>
								</resource>
							</webResources>
							<packagingExcludes>**/services/user/*, **/services/verification/*</packagingExcludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>verification</id>
			<properties>
				<packaging.type>war</packaging.type>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<finalName>${project.artifactId}-${project.version}-verification</finalName>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<configuration>
							<webResources>
								<resource>
									<!-- this is relative to the pom.xml directory -->
									<directory>${project.basedir}/src/main/resources</directory>
								</resource>
							</webResources>
							<packagingExcludes>**/services/user/*, **/services/issuance/*</packagingExcludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>user</id>
			<properties>
				<packaging.type>war</packaging.type>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<finalName>${project.artifactId}-${project.version}-user</finalName>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<configuration>
							<webResources>
								<resource>
									<!-- this is relative to the pom.xml directory -->
									<directory>${project.basedir}/src/main/resources</directory>
								</resource>
							</webResources>
							<packagingExcludes>**/services/verification/*,
								**/services/issuance/*</packagingExcludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
